package main

func main() {
	var i [][]i32

	var arr1 []i32
	var arr2 []i32
	var arr3 []i32
	arr1 = []i32{1, 2}
	arr2 = []i32{30, 40}
	arr3 = []i32{500, 600}

	i = [][]i32{
		arr1, arr2, arr3}

	// Testing lengths.
	test(len(i), 3, "")
	test(len(i[0]), 2, "")
	test(len(i[1]), 2, "")
	
	// Testing values.
	test(i[0][0], 1, "")
	test(i[0][1], 2, "")
	test(i[1][0], 30, "")
	test(i[1][1], 40, "")
	test(i[2][0], 500, "")
	test(i[2][1], 600, "")

	i = [][]i32{
		[]i32{10, 20},
		[]i32{300, 400},
		[]i32{5000, 6000}}

	test(i[0][0], 10, "")
	test(i[0][1], 20, "")
	test(i[1][0], 300, "")
	test(i[1][1], 400, "")
	test(i[2][0], 5000, "")
	test(i[2][1], 6000, "")

	var j [][][][]str
	// j = [5][4][3][2]str{[4][3][2]str{[3][2]str{[2]str{0, 1}}}}

	j = [][][][]str{
		[][][]str{
			[][]str{[]str{"one", "two"}, []str{"three"}},
			[][]str{[]str{"four"}, []str{"five", "six"}}},
		[][][]str{
			[][]str{[]str{sprintf("%s", "seven"), sprintf("%s%s", "eig", "ht")}, []str{"nine"}},
			[][]str{[]str{"ten"}, []str{"eleven", "twelve"}}}}

	test(j[0][0][0][0], "one", "")
	test(j[0][0][0][1], "two", "")
	test(j[0][0][1][0], "three", "")
	test(j[0][1][0][0], "four", "")
	test(j[0][1][1][0], "five", "")
	test(j[0][1][1][1], "six", "")
	test(j[1][0][0][0], "seven", "")
	test(j[1][0][0][1], "eight", "")
	test(j[1][0][1][0], "nine", "")
	test(j[1][1][0][0], "ten", "")
	test(j[1][1][1][0], "eleven", "")
	test(j[1][1][1][1], "twelve", "")

	j[1][0][0][0] = sprintf("%s", "twenty")
	test(j[1][0][0][0], "twenty", "")

	var k [][][]i32

	k = [][][]i32{
		[][]i32{[]i32{0,1}, []i32{2,3}, []i32{4,5}},
		[][]i32{[]i32{6,7}, []i32{8,9}, []i32{10,11}},
		[][]i32{[]i32{12,13}, []i32{14,15}, []i32{16,17}},
		[][]i32{[]i32{18,19}, []i32{20,21}, []i32{22,23}}}

	var c i32
	for x := 0; x < 4; x++ {
		for y := 0; y < 3; y++ {
			for z := 0; z < 2; z++ {
				test(k[x][y][z], c, "")
				c++
			}
		}
	}
}
