package main

import "glfw"
import "gl"

func issue24Func(stride i32, attr []i32, verts []f32)(){
	printf("l0 %d, l1 %d\n", len(attr), len(verts))
	gl.BufferData(gl.ARRAY_BUFFER, 36 * 4, verts, gl.DYNAMIC_DRAW)
}

func main()() {
	var test str
	printf("%s\n", test)

	glfw.Init()
	glfw.WindowHint(glfw.Resizable, glfw.False)
	glfw.CreateWindow(test, 800, 600, test)
	glfw.MakeContextCurrent(test)

	gl.Init()
	var attributes []i32
	attributes = []i32 {3 ,3}

	var vertices []f32
	vertices = []f32{
		 0.0,  1.0,  2.0,  3.0,  4.0,  5.0,
		 6.0,  7.0,  8.0,  9.0, 10.0, 11.0,
		12.0, 13.0, 14.0, 15.0, 16.0, 17.0,
		18.0, 19.0, 20.0, 21.0, 22.0, 23.0,
		24.0, 25.0, 26.0, 27.0, 28.0, 29.0,
		30.0, 31.0, 32.0, 33.0, 34.0, 35.0 }

	var vbo i32
	vbo = gl.GenBuffers(1, vbo)
	gl.BindBuffer(gl.ARRAY_BUFFER, vbo)

	issue24Func(gl.TRIANGLES, attributes, vertices)
}
